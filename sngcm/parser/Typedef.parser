// =================================
// Copyright (c) 2019 Seppo Laakko
// Distributed under the MIT license
// =================================

[hpp]#include <sngcm/parser/ParserApi.hpp>
[hpp]#include <sngcm/ast/Typedef.hpp>
[hpp]#include <sngcm/parser/ParsingContext.hpp>
[cpp]#include <sngcm/parser/Specifier.hpp>
[cpp]#include <sngcm/parser/TypeExpr.hpp>
[cpp]#include <sngcm/parser/Identifier.hpp>
[cpp]#include <sngcm/lexer/CmajorLexer.hpp>
[cpp]#include <sngcm/lexer/CmajorTokens.hpp>

using namespace sngcm::ast;
using namespace CmajorTokens;

parser api(SNGCM_PARSER_API) TypedefParser
{
    uselexer CmajorLexer;

    using SpecifierParser.Specifiers;
    using TypeExprParser.TypeExpr;
    using IdentifierParser.Identifier;

    Typedef(ParsingContext* ctx, var Span s) : TypedefNode*
        ::= Specifiers:specifiers{ s = span; } TYPEDEF TypeExpr(ctx):type! Identifier:id! SEMICOLON!{ s.end = span.end; return new TypedefNode(s, specifiers, type, id); }
        ;

    ruleinfo
    {
        (Typedef, "typedef")
    }
}
