// =================================
// Copyright (c) 2019 Seppo Laakko
// Distributed under the MIT license
// =================================

[hpp]#include <sngcm/parser/ParserApi.hpp>
[hpp]#include <sngcm/ast/Identifier.hpp>
[cpp]#include <sngcm/lexer/CmajorLexer.hpp>
[cpp]#include <sngcm/lexer/CmajorTokens.hpp>

using namespace sngcm::ast;
using namespace CmajorTokens;

parser api(SNGCM_PARSER_API) IdentifierParser
{
    uselexer CmajorLexer;

    Identifier : IdentifierNode*
        ::= ID{ return new IdentifierNode(span, lexer.GetToken(pos)); }
        ;

    QualifiedId(var std::u32string value, var Span s) : IdentifierNode*
        ::=
        (   ID{ s = span; Token token = lexer.GetToken(pos); value.append(std::u32string(token.match.begin, token.match.end)); }
            (DOT ID{ s.end = span.end; Token token = lexer.GetToken(pos); value.append(1, '.'); value.append(std::u32string(token.match.begin, token.match.end)); })*
        )
        {
            return new IdentifierNode(s, value);
        }
        ;

    ruleinfo
    {
        (Identifier, "identifier"), (QualifiedId, "identifier")
    }
}
