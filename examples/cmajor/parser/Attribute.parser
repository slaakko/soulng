// =================================
// Copyright (c) 2019 Seppo Laakko
// Distributed under the MIT license
// =================================

[hpp]#include <cmajor/parser/ParserApi.hpp>
[hpp]#include <cmajor/ast/Attribute.hpp>
[cpp]#include <cmajor/lexer/CmajorLexer.hpp>
[cpp]#include <cmajor/lexer/CmajorTokens.hpp>

using namespace CmajorTokens;

parser api(CMAJOR_PARSER_API) AttributeParser
{
    uselexer CmajorLexer;

    Attributes(var std::unique_ptr<cmajor::ast::Attributes> attributes) : cmajor::ast::Attributes*
        ::= LBRACKET{ attributes.reset(new cmajor::ast::Attributes()); } (Attribute(attributes.get()):attribute % COMMA)? RBRACKET!
        {
            return attributes.release();
        }
        ;

    Attribute(cmajor::ast::Attributes* attributes, var Span s, var std::u32string name, var std::u32string value)
        ::= (ID{ s = span; name = lexer.GetMatch(span); } (ASSIGN STRINGLIT{ s.end = span.end; value = lexer.GetMatch(span); })?)
        {
            attributes->AddAttribute(s, name, value);
        }
        ;

    ruleinfo
    {
        (Attributes, "attributes"), (Attribute, "attribute")
    }
}
